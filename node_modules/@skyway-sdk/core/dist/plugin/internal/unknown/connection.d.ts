import { Event } from '@skyway-sdk/common';
import { SkyWayConnection } from '../../interface';
import { PublicationImpl } from '../../../publication';
import { SubscriptionImpl } from '../../../subscription';
import { LocalPersonImpl } from '../../../member/localPerson';
import { RemoteMemberImplInterface } from '../../../member/remoteMember';
export declare class UnknownConnection implements SkyWayConnection {
    readonly localPerson: LocalPersonImpl;
    readonly remoteMember: RemoteMemberImplInterface;
    readonly type: string;
    readonly onDisconnect: Event<void>;
    readonly onClose: Event<void>;
    closed: boolean;
    constructor(localPerson: LocalPersonImpl, remoteMember: RemoteMemberImplInterface);
    close(): void;
    startPublishing(publication: PublicationImpl): Promise<void>;
    stopPublishing(publication: PublicationImpl): Promise<void>;
    startSubscribing(subscription: SubscriptionImpl): Promise<void>;
    stopSubscribing(subscription: SubscriptionImpl): Promise<void>;
}
//# sourceMappingURL=connection.d.ts.map